;
; Copyright (c) 2020 Raspberry Pi (Trading) Ltd.
;
; SPDX-License-Identifier: BSD-3-Clause
;
.pio_version 0 // only requires PIO version 0

.program read16

; Repeatedly get one word of data from the TX FIFO, stalling when the FIFO is
; empty. Write the least significant bit to the OUT pin group.

; loop:
;     pull
;     out pins, 16
;     set x, 31

; delay_on:
;     jmp x-- delay_on
;     set x, 31
;     jmp delay_on2

; delay_on2:
;     jmp x-- delay_on2
;     out pins, 16
;     set x, 31

; delay_off:
;     jmp x-- delay_off
;     jmp delay_off2

; delay_off2:
;     jmp x-- delay_off2
;     jmp loop


loop:
    pull
    out pins, 16 [31]
    out pins, 16 [31]
    jmp loop


% c-sdk {
static inline void read16_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = read16_program_get_default_config(offset);

    // Map the state machine's OUT pin group to one pin, namely the `pin`
    // parameter to this function.
    sm_config_set_out_pins(&c, pin, 16);
    sm_config_set_out_shift(&c, true, true, 32);

    
    // Set this pin's GPIO function (connect PIO to the pad)
    ; pio_gpio_init(pio, pin);
    for (int i = pin; i < pin + 16; i++){ 
        pio_gpio_init(pio, i);
    }
    // Set the pin direction to output at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 16, true);
    
    float div = 65535.0;
    sm_config_set_clkdiv(&c, div);

    // Load our configuration, and jump to the start of the program
    pio_sm_init(pio, sm, offset, &c);

    // Set the state machine running
    pio_sm_set_enabled(pio, sm, true);
}
%}
